---
title: "Diffusion w/ Laplacians"
format: html
jupyter: python3
editor: 
  render-on-save: true
---

```{python}
import bokeh
from bokeh.io import output_notebook
from bokeh.plotting import figure, show
from bokeh.layouts import row, column
from pbsig.vis import figure_complex
from pbsig.color import bin_color
output_notebook()
```


```{python}
import numpy as np
from splex import *
np.random.seed(1234)
X = np.random.uniform(size=(50,2), low=0, high=1)
S = delaunay_complex(X)

from pbsig.linalg import * 
L = up_laplacian(S, normed = True)
# show(figure_complex(S, X))

from scipy.sparse.linalg import eigsh
ew, ev = eigsh(L, k=L.shape[1]-1)
L_diff = ev @ np.diag(np.exp(-5.050*ew)) @ ev.T
# ind = np.argmin(X @ np.array([0,1]))
ind = 14

p = figure_complex(S, X, height=250, width=250)
p.scatter(*X.T, color=bin_color(L_diff[:,ind], "viridis", lb=0, ub=1), size=10.5)
show(p)
```

## Heat kernel signature

```{python}
from scipy.sparse.linalg import eigsh
import timeit


ew, ev = eigsh(L, k=10)
timeit.timeit(lambda: eigsh(L, k=20, sigma=0, which="LM"), number=30)
ew, ev = eigsh(L, k=10, sigma=0, which="LM")

```



