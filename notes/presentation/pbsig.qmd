---
title: Spectral relaxations of Persistence Invariants
subtitle: Rank
author: "Matt Piekenbrock"
format: 
  revealjs:
    smaller: true
    theme: simple 
    institute: Northeastern University - Khoury College of Computer Science 
    spotlight:
      useAsPointer: false
      size: 35
      toggleSpotlightOnMouseDown: false
      spotlightOnKeyPressAndHold: 16 # shift : 
      presentingCursor: "default"
    overview: true
    margin: 0.075
revealjs-plugins:
  - spotlight
html: 
  html-math-method: katex
filters:
  # - pandoc-katex.lua
  - roughnotation
# keycodes: https://gcctech.org/csc/javascript/javascript_keycodes.htm
---

## Relaxing the Rank invariant  

Many transforms exist mapping $\mathrm{dgm}$'s to function spaces, e.g. 
  
- Persistence Landscapes 
- Persistence images 
- ... a few others

Decidedly less work done on _the rank invariant_ (exceptions: [][][])

$$ \beta_p^{i,j} : \mathrm{rank}(H_p(K_i) \to H_p(K_j))$$

We introduce a _spectral-relaxation_ of $\beta_p^{i,j}$ that is:

  1. Smooth + differentiable on the PSD cone, semismooth in $\mathbb{R}^{n \times n}$
  2. a $(1{\textstyle -}\epsilon)$-approximation of $\beta_p^{i,j}$ for any $\epsilon > 0$
  3. derived from combinatorial Laplacian operators

<!-- - Continuous relaxation 
- Captures persistence properties
- Doesn't require $\mathrm{dgm}$ to compute -->

<!-- ![](../betti_add.png) -->

## Application: parameterized families 
Consider a 1-parameter family of simplicial complexes: 

$$\{ \; \mu_p^R(K_\alpha) \triangleq \mathrm{card}\big(\, \left.\mathrm{dgm}(K_\alpha) \right|_{R} \, \big) : \alpha \in \mathcal{A} \; \}$$



## Why the rank invariant?

There is a duality between diagrams its associated rank function:

$$ \mathrm{dgm}_p(f) \triangleq \{ \, ( \, i, j \,) \in \Delta_+ :  \mu_p^{i,j} \neq 0 \, \} \; \cup \; \Delta $$

$$\text{where: } \quad \mu_p^{i,j} = \left(\beta_p^{i,j{\small -}1} - \beta_p^{i,j} \right) - \left(\beta_p^{i{\small -}1,j{\small -}1} - \beta_p^{i{\small -}1,j} \right) \quad $$

Dually, the _"Fundamental Lemma of Persistent Homology"_ says that:
$$\beta_p^{k,l} = \sum\limits_{i \leq k} \sum\limits_{j > l} \mu_p^{i,j}$$

$\Longrightarrow$ Diagrams completely characterize their rank functions

$\Longleftrightarrow$ and vice versa

The rank 

## Persistence




::: aside
Some additional commentary of more peripheral interest.
:::

::: {.notes}
Speaker notes go here.
:::

## Vectorizing diagrams

:::: {.columns}

$$ {\displaystyle \mathrm{dgm}_p(f) := \{ \, (a_i, a_j) :  \mu_p^{i,j} \neq 0 \, \} \; \cup \; \Delta } $$

::: {.column width="40%" align=center}
contents...
:::

::: {.column width="60%"}
contents...
:::

::::

## Motivating Derivation 
	
<!-- $$
\begin{align}
\beta_p^{i,j} & = \mathrm{dim} \big( \; \mathrm{Ker}(\partial_p(K_i)) \; / \; \mathrm{Im}(\partial_{p+1}(K_j)) \; \big ) \\
&= \mathrm{dim}\big( \mathrm{Ker}(\partial_p(K_i)) \; / \; (\mathrm{Ker}(\partial_p(K_i)) \cap \mathrm{Im}(\partial_{p+1}(K_j))) \big ) \\
&= \mathrm{dim}\big(\mathrm{Ker}(\partial_p(K_i))\big) - \mathrm{dim}\big(\mathrm{Ker}(\partial_p(K_i)) \cap \mathrm{Im}(\partial_{p+1}(K_j))\big)
\end{align}
$$ -->

:::{.incremental style="list-style-type: none;"}

<li style="text-align: left" class="fragment fade-in-then-semi-out fragment-index=1">
$\beta_p^{i,j} = \mathrm{dim} \big( \;\mathrm{Ker}(\partial_p(K_i))\; / \;\mathrm{Im}(\partial_{p+1}(K_j)) \; \big )$
</li>
<li style="text-align: left" class="fragment fade-in-then-semi-out fragment-index=2">
$\hphantom{\beta_p^{i,j} }= \mathrm{dim}\big(\; \mathrm{Ker}(\partial_p(K_i)) \; / \; (\mathrm{Ker}(\partial_p(K_i)) \cap \mathrm{Im}(\partial_{p+1}(K_j))) \; \big )$
</li>
<li style="text-align: left" class="fragment fade-in-then-semi-out fragment-index=3">
$\hphantom{\beta_p^{i,j} }=\mathrm{dim}\big(\;\mathrm{Ker}(\partial_p(K_i))\big) - \mathrm{dim}\big(\mathrm{Ker}(\partial_p(K_i)) \cap \mathrm{Im}(\partial_{p+1}(K_j))\;\; \big)$
</li>

<li style="text-align: left" class="fragment fade-in-then-semi-out fragment-index=4">
Rank-nullity says: 
$$
\mathrm{dim}\big(\mathrm{Ker}(\partial_p(K_i))\big) = \lvert C_p(K_i) \rvert - \mathrm{dim}(\mathrm{Im}(\partial_p(K_i)))
$$
</li>

<li style="text-align: left" class="fragment fade-in-then-semi-out fragment-index=5">
Replacing dimensions with ranks, we have: 
<p style="text-align: left; margin-tb: 2em;">
[$\beta_p^{i,j} = \lvert C_p(K_i) \rvert - \mathrm{rank}(\partial_p(K_i)) -$]{.rn rn-type=circle rn-color=red}
[$\mathrm{dim}\big(\mathrm{Ker}(\partial_p(K_i)) \cap \mathrm{Im}(\partial_{p+1}(K_j))$]{.rn rn-type=strike-through rn-color=red}
</p>
</li>
:::

## Motivating Derivation 



## Rank Invariances 

$\mathrm{rank}$ is invariant to many things:

$$
\begin{align}
  \mathrm{rank}(A) &\triangleq \mathrm{dim}(\mathrm{Im}(A)) & \\
  &\equiv \mathrm{rank}(A^T) & \text{(adjoint)} \\
  &\equiv \mathrm{rank}(A^T A) & \text{(inner product)} \\
  &\equiv \mathrm{rank}(A A^T) & \text{(outer product)} \\
  &\equiv \mathrm{rank}(S^{-1}AS) & \text{(change of basis)} \\
  &\equiv \mathrm{rank}(O^T A O) & \text{(rotations)} \\
  &\equiv \mathrm{rank}(P^T A P) & \text{(permutation)} \\
  &\equiv \dots & \text{etc.}
\end{align}
$$

_Q_: Can we exploit some of these? 

## Rank test 2 

<!-- https://revealjs.com/auto-animate/ -->


<section data-auto-animate>

<h2> $$\mathrm{rank}(A) \triangleq \mathrm{dim}(\mathrm{Im}(A))$$ </h2>

</section>
<section data-auto-animate>
  <h2> $$\mathrm{rank}(A) \triangleq \mathrm{dim}(\mathrm{Im}(A))$$ </h2>
  <h2> $$\mathrm{rank}(A) \triangleq \mathrm{rank}(\mathrm{Im}(A))$$ </h2>
</section>

## Permutation Invariance 

Consider the setting where $f_\alpha : \mathbb{R} \to \mathbb{R}^N$ is an $\alpha$-parameterized filter function: 

$$ \mu_p^R(\, f_\alpha \, ) = \{ \mu_p^R(K_\bullet^\alpha) : \alpha \in \mathbb{R} \}$$

Difficult to compute $R_\alpha = \partial_\alpha V_\alpha$ for all $\alpha$ as $K_\bullet = (K, f_\alpha)$ is changing constantly...

<!-- #\mathrm{rank}(\partial_p(K_\bullet( \, f_\alpha \,))) -->

<!-- On the other hand... -->
$$ \mathrm{rank}(\partial_p(K_\bullet)) \equiv \mathrm{rank}(P^T \partial_p(K) P) $$
$$ \mathrm{rank}(\partial_p(K_\bullet)) \equiv \mathrm{rank}(W \mathrm{sgn}(\partial_p(K)) W) $$

Thus we may decouple $f_\alpha$ and $K$ in the computation: 

$$
\begin{align*}
 \mu_p^{R}(K,f_\alpha) &\triangleq \mathrm{rank}\big(\,\hat{\partial}_{q}^{j + \delta, k}\,\big) - \; \dots \; + \mathrm{rank}\big(\, \hat{\partial}_{q}^{i + \delta, l}\,\big)  \\
&\equiv \mathrm{rank}\big(\,V_p^j \circ \partial_{q} \circ W_q^k \,\big) - \; \dots \; + \mathrm{rank}\big(\,V_p^{i+\delta} \circ \partial_{q} \circ W_q^l \,\big)
 \end{align*}
 $$

where the entries of $V$, $W$ change continuously w/ $\alpha$, while $\partial_q$ remains _fixed_...

## Combinatorial Laplacian 

Recall $\mathrm{rank}(A) = \mathrm{rank}(A^T A) = \mathrm{rank}(A A^T)$

For boundary matrices, these matrices translate into up- and down- _Laplacians_:

$$ \Delta_p = \partial_{p+1} \partial_{p+1}^T  + \partial_{p}^T \partial_{p+1} $$

Thus: 
$$\begin{align}
\mathrm{rank}\big(\,V_p^j \circ \partial_{q} \circ W_q^k \,\big) \\
= \mathrm{rank}(L_{\ast, p}^{j,k}) + \dots - \mathrm{rank}(L_{\ast, p}^{j,k})
\end{align}
$$

"weight function" is 1-to-1 with scalar product on cochain groups $C^p(K, \mathbb{R})$ 

__Summary:__ We can obtain $\mu_p^R(K, f_\alpha)$ for varying $\alpha$ by using thresholded versions of $f_\alpha$ as scalar-products 



<script>
  window.WebFontConfig = {
    custom: {
      families: ['KaTeX_AMS'],
    },
  };
</script>